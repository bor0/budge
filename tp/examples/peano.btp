# Peano's axioms
# --------------
#
# As per https://en.wikipedia.org/wiki/Peano_axioms

# Equality refl, symm, tr
rEqR : ⊢EQ(x,x)
rEqS : ⊢EQ(x,y) -> ⊢EQ(y,x)
rEqT : ⊢EQ(x,y) -> ⊢EQ(y,z) -> ⊢EQ(x,z)

# Inequality
rNeq : ⊢!EQ(x,ADD(S(x),y))
rNeqT : ⊢!EQ(x,y) -> ⊢EQ(y,z) -> ⊢!EQ(x,z)

# Zero is a natural number
rZ : ⊢0
thZ! : rZ

# Zero is a natural number (term)
rTmZ : 0
tmZ! : rTmZ

# Successor
rS : ⊢x -> ⊢S(x)
rTmS : S(x) # term
# Successor (object-level)
rSO : ⊢x=>S(x)

# Inj left
rIL : ⊢EQ(m,n) -> ⊢EQ(S(m),S(n))
# Inj right
rIR : ⊢EQ(S(m),S(n)) -> ⊢EQ(m,n)

# Some variables at the object level
rTmX : X
tmX! : rTmX

# Equality respects function application (addition), i.e. m=n -> a+m=a+n.
# TODO: This can probably be derived as a theorem from `rIL` and `rIR`
rcongAdd : ⊢EQ(m,n) -> ⊢EQ(ADD(a,m),ADD(a,n))

# Induction
rInd      : ⊢p(0) -> ⊢p(n)=>p(S(n)) -> ⊢∀X,p(X)
# --------------

# Addition
rAZ     : ⊢EQ(ADD(x,0),x)
rAS     : ⊢EQ(ADD(x,S(y)),S(ADD(x,y)))
rTmA    : ADD(x,y)

# Multiplication
rMZ     : ⊢EQ(MUL(x,0),0)
rMS     : ⊢EQ(MUL(x,S(y)),ADD(x,MUL(x,y)))
rTmM    : MUL(x,y)

# Evenness
rEvZ : ⊢EV(0)
thEvZ! : rEvZ
rEvS : ⊢EV(x) -> ⊢EV(S(S(x)))

# Terms needed for some of the theorems
tmOne! : rTmS x=tmZ!
tmOneAddZero! : rTmA x=tmOne!;y=tmZ!
tmOneAddOne! : rTmA x=tmOne!;y=tmOne!
tmSOneAddZero! : rTmS x=tmOneAddZero!
tmTwo! : rTmS x=tmOne!
tmXMulZero! : rTmM x=tmX!;y=tmZ!
tmXMulOne! : rTmM x=tmX!;y=tmOne!
tmXAddXMulZero! : rTmA x=tmX!;y=tmXMulZero!
tmXAddZero! : rTmA x=tmX!;y=tmZ!
rtmS : S
tmS! : rtmS # for the inductive predicate

# Theorem 1: One plus one is two
th1step1! : rAS x=tmOne!;y=tmZ!
th1step2! : rAZ x=tmOne!
th1step3! : rIL m=tmOneAddZero!;n=tmOne! th1step2!
th1       : rEqT x=tmOneAddOne!;y=tmSOneAddZero!;z=tmTwo! th1step1! th1step3!

# Theorem 2: X times one is X
tmXmulZisX! : rMZ x=tmX!
th2step1!   : rMS x=tmX!;y=tmZ!
th2step2!   : rcongAdd m=tmXMulZero!;n=tmZ!;a=tmX! tmXmulZisX!
th2step3!   : rEqT x=tmXMulOne!;y=tmXAddXMulZero!;z=tmXAddZero! th2step1! th2step2!
th2step4!   : rAZ x=tmX!
th2         : rEqT x=tmXMulOne!;y=tmXAddZero!;z=tmX! th2step3! th2step4!

# Theorem 3: Two is even
th3 : rEvS x=tmZ! thEvZ!

# Theorem 4: Example induction
th4step1! : rS x=tmZ! thZ!
th4step2! : rSO x=tmOne!
th4       : rInd p=tmS!;n=tmZ! th4step1! th4step2!

# Theorem 5: Example function: f(1) = 2
rF : ⊢EQ(F(x),ADD(x,S(0))) # f(x) = x+1
rtmF : F(x)

tmF1Eq2! : rF x=tmOne!
tmF1! : rtmF x=tmOne!

th5 : rEqT x=tmF1!;y=tmOneAddOne!;z=tmTwo! tmF1Eq2! th1

# Theorem 6: 0!=1
th6step1! : rNeq x=tmZ!;y=tmZ!
th6step2! : rAZ x=tmOne!
th6 : rNeqT x=tmZ!;y=tmOneAddZero!;z=tmOne! th6step1! th6step2!
